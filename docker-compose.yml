version: "3.8"
volumes:
  php-fpm-socket:
  db-postgres:
  redis:
services:
  app:
    build:
      args:
        user: www
        uid: ${APP_USER_ID:-1000}
      context: ./
      dockerfile: .docker/app/Dockerfile
    container_name: ${APP_NAME:-todonotes}_app
    restart: unless-stopped
    depends_on:
      - database
      - redis
      - worker
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - .docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - .docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - .docker/php/error_reporting.ini:/usr/local/etc/php/conf.d/error_reporting.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - scrw_internal
    environment:
      - PHP_IDE_CONFIG="serverName=todonotes"
      - DB_CONNECTION=pgsql
      - DB_HOST=${DB_HOST:-database}
      - DB_DATABASE=${DB_DATABASE:-scrw_db}
      - DB_USERNAME=${DB_USERNAME:-scrw_db_user}
      - DB_PASSWORD=${DB_PASSWORD:-scrw_db_password}

  worker:
    build:
      args:
        user: www
        uid: ${APP_USER_ID:-1000}
      context: ./
      dockerfile: .docker/app/Dockerfile
    container_name: ${APP_NAME:-todonotes}_worker
    restart: unless-stopped
    depends_on:
      - database
      - redis
    working_dir: /var/www/
    volumes:
      - ./:/var/www
      - .docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - scrw_internal
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=${DB_HOST:-database}
      - DB_DATABASE=${DB_DATABASE:-scrw_db}
      - DB_USERNAME=${DB_USERNAME:-scrw_db_user}
      - DB_PASSWORD=${DB_PASSWORD:-scrw_db_password}

  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME:-todonotes}_nginx
    restart: unless-stopped
    ports:
      - ${PORT_PREFIX:-}${NGINX_PORT:-9909}:80
    volumes:
      - ./:/var/www
      - .docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - scrw_internal
      - scrw_external

  redis:
    container_name: ${APP_NAME:-todonotes}_redis
    build:
      context: .
      dockerfile: .docker/redis/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure

      resources:
        limits:
          memory: ${DOCKER_REDIS_MEM_LIMIT:-2G}
    ports:
      - ${PORT_PREFIX:-}${REDIS_PORT:-6379}:6379
    networks:
      - scrw_internal
    volumes:
      - redis:/var/lib/redis

  database:
    container_name: ${APP_NAME:-todonotes}_db
    build:
      context: .
      dockerfile: .docker/postgres/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - ${PORT_PREFIX:-}${DB_PORT:-5432}:5432
    networks:
      - scrw_external
      - scrw_internal
    volumes:
      - db-postgres:/var/lib/postgres
    environment:
      POSTGRES_USER: ${DB_USERNAME:-scrw_db_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-scrw_db_password}
      POSTGRES_DB: ${DB_DATABASE:-scrw_db}

  sql-adapter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: ${APP_NAME:-todonotes}_sql-adapter
    environment:
      DATA_SOURCE_NAME: postgresql://${DB_USERNAME:-scrw_db_user}:${DB_PASSWORD:-scrw_db_password}@database:5432/${DB_DATABASE:-scrw_db}?sslmode=disable
    ports:
      - "9187:9187"
    depends_on:
      - database
    networks:
      - scrw_external
      - scrw_internal

networks:
  scrw_external:
    driver: bridge
  scrw_internal:
